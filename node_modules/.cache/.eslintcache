[{"/Users/tahaismail/web_projects/find_pokemon/src/index.js":"1","/Users/tahaismail/web_projects/find_pokemon/src/Routes.js":"2","/Users/tahaismail/web_projects/find_pokemon/src/Game.js":"3","/Users/tahaismail/web_projects/find_pokemon/src/Start.js":"4","/Users/tahaismail/web_projects/find_pokemon/src/End.js":"5","/Users/tahaismail/web_projects/find_pokemon/src/firebase.js":"6","/Users/tahaismail/web_projects/find_pokemon/src/components/PokeView.js":"7","/Users/tahaismail/web_projects/find_pokemon/src/components/PokeCard.js":"8","/Users/tahaismail/web_projects/find_pokemon/src/components/ScoreCard.js":"9","/Users/tahaismail/web_projects/find_pokemon/src/displayTime.js":"10"},{"size":441,"mtime":1635526400085,"results":"11","hashOfConfig":"12"},{"size":479,"mtime":1635526364438,"results":"13","hashOfConfig":"12"},{"size":4881,"mtime":1637010563131,"results":"14","hashOfConfig":"12"},{"size":1229,"mtime":1636832482512,"results":"15","hashOfConfig":"12"},{"size":2103,"mtime":1637009964795,"results":"16","hashOfConfig":"12"},{"size":2872,"mtime":1637011130138,"results":"17","hashOfConfig":"12"},{"size":865,"mtime":1636825424025,"results":"18","hashOfConfig":"12"},{"size":497,"mtime":1637010692698,"results":"19","hashOfConfig":"12"},{"size":298,"mtime":1636328669339,"results":"20","hashOfConfig":"12"},{"size":334,"mtime":1637006726065,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"vbwimc",{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/tahaismail/web_projects/find_pokemon/src/index.js",[],["45","46"],"/Users/tahaismail/web_projects/find_pokemon/src/Routes.js",[],"/Users/tahaismail/web_projects/find_pokemon/src/Game.js",["47"],"import React, { useState, useEffect, useRef } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport pokePic from './assets/pokemon_wallpaper.jpeg';\nimport { selectMons, getPokePics, checkFound } from './firebase';\nimport PokeCard from './components/PokeCard';\nimport PokeView from './components/PokeView';\nimport msToTime from './displayTime';\n\nfunction Game() {\n    let [foundPokes, setFoundPokes] = useState([]);\n    let [pickedPokemon, setPickedPokemon] = useState([]);\n    let [pokePics, setPokePics]  = useState([]);\n    let [pokeCards, setPokeCards] = useState(null);\n    let [boxView, setBoxView] = useState(null);\n    const startTime = useRef(Date.now());\n    const history = useHistory();\n    const name = history.location.state.name;\n\n    useEffect(() => {\n        const getData = async () => {\n            const mons = await selectMons();\n            const pics = await getPokePics(mons);\n            const foundArray = [    \n                {\n                    id: mons[0].id,\n                    found: false\n                },\n                {\n                    id: mons[1].id,\n                    found: false\n                },\n                {\n                    id: mons[2].id,\n                    found: false \n                },\n                {\n                    id: mons[3].id,\n                    found: false  \n                },\n                {\n                    id: mons[4].id,\n                    found: false\n                }\n            ];\n            setPickedPokemon(mons);\n            setFoundPokes(foundArray);\n            setPokePics(pics);\n            setPokeCards(pics.map((mon, index) => \n                <PokeCard\n                    pokePic={mon.src}\n                    pokeName={mons[index].name}\n                    found={foundArray[index].found}\n                    key={index}\n                ></PokeCard>));\n        }\n        getData();\n    }, [])\n    \n    const selectArea = (e) => {\n        const boxWidth = 90;\n        const boxHeight = 110;\n        const parentPos = getPosition(e.target);\n        const xPos = e.clientX - parentPos.x - boxWidth / 2;\n        const yPos = e.clientY - parentPos.y - boxHeight / 2;\n        setBoxView(\n            <PokeView \n                boxCords={[xPos, yPos]}\n                pokeList={pickedPokemon}\n                foundPokes={foundPokes}\n                foundFunction={updateFound}>\n            </PokeView>\n        );\n    }\n\n    const updateFound = (pokeID, boxCords) => {\n        const found = checkFound(pokeID, boxCords);\n        const index = foundPokes.map((poke) => poke.id).indexOf(pokeID);\n        found.then(result => {\n            setBoxView(null);\n            setFoundPokes(foundPokes.slice(0, index)\n            .concat([{id: pickedPokemon[index].id, found: result}])\n            .concat(foundPokes.slice(index + 1)));\n        })\n    }\n\n    useEffect(() => {\n        const totalFound = foundPokes.reduce((prev, cur) => prev + cur.found, 0);\n        if (totalFound === 5) {\n            history.push({\n                pathname: '/end',\n                state: {\n                    time: Date.now() - startTime.current,\n                    name: name\n                }\n            });\n        }\n    })\n    \n    useEffect(() => {\n        setPokeCards(pokePics.map((mon, index) => \n                <PokeCard\n                    pokePic={mon.src}\n                    pokeName={pickedPokemon[index].name}\n                    found={foundPokes[index].found}\n                    key={index}\n                ></PokeCard>))\n    }, [foundPokes, pickedPokemon, pokePics])\n\n    return (\n        <div>\n            <h2>Pokemon to find:</h2>\n            <div className='poke-box'>\n                {pokeCards}\n            </div>\n            <div className='game-box' onClick={selectArea}>\n                {boxView}\n                <img \n                    src={pokePic} \n                    alt='pokemon-game' \n                    className='big-poke-pic'>\n                </img>\n            </div>\n        </div>\n    );\n}\n\n//borrowed from https://www.kirupa.com/snippets/move_element_to_click_position.htm\nfunction getPosition(element) {\n    let xPos = 0;\n    let yPos = 0;\n\n    while (element) {\n        if (element.tagName === 'BODY') {\n            let xScroll = element.scrollLeft || document.documentElement.scrollLeft;\n            let yScroll = element.scrollTop || document.documentElement.scrollTop;\n\n            xPos += (element.offsetLeft - xScroll + element.clientLeft);\n            yPos += (element.offsetTop - yScroll + element.clientTop);\n        } else {\n            xPos += (element.offsetLeft - element.scrollLeft + element.clientLeft);\n            yPos += (element.offsetTop - element.scrollTop + element.clientTop);\n        }\n        element = element.offsetParent;\n    }\n    return {\n        x: xPos,\n        y: yPos\n    };\n}\n\nexport default Game;\n","/Users/tahaismail/web_projects/find_pokemon/src/Start.js",[],"/Users/tahaismail/web_projects/find_pokemon/src/End.js",["48"],"import React, { useEffect, useState } from 'react';\nimport { useHistory, Link } from 'react-router-dom';\nimport { getScores, updateScores } from './firebase';\nimport ScoreCard from './components/ScoreCard'; \nimport _ from 'lodash';\nimport msToTime from './displayTime';\n\nfunction End() {\n\n    const history = useHistory();\n    let [curScores, setCurScores] = useState([])\n    let [timeDisplay, setTimeDisplay] = useState('');\n    let [highScoreMessage, setHighScoreMessage] = useState(null);\n  \n    useEffect(() => {\n        const getData = async () => {\n            const elapsedTime = history.location.state.time;\n            const playerName = history.location.state.name;\n            const displayTime = msToTime(elapsedTime)\n            const playerScore = { displayTime: displayTime, name: playerName, rawTime: elapsedTime }\n            const prev = await getScores();\n            const cur = updateScores(playerScore, prev);\n            const message = (_.isEqual(prev, cur)) ? null :\n            <h3>Congratulations! Your time was quick enough to make the high score board!</h3>\n            setCurScores(cur);\n            setTimeDisplay(displayTime);\n            setHighScoreMessage(message);\n        }\n        getData();\n    }, []);\n\n   \n    return (\n        <div>\n            <h2>You found all the Pokemon in \n                {' ' + timeDisplay.slice(0, timeDisplay.indexOf(':')) + ' '} \n                minutes and \n                {' ' + timeDisplay.slice(timeDisplay.indexOf(':') + 1)} seconds!</h2>\n            {highScoreMessage}\n            <h3 className='score-intro'>High Scores: </h3>\n            <div className='score-table'>\n            {curScores.map((scoreCard, index) => \n                <ScoreCard \n                    pName={scoreCard.name} \n                    pScore={scoreCard.displayTime}>\n                    key={index}\n                    </ScoreCard>)}\n            </div>\n            \n            <Link to={{\n                pathname: '/'\n                }}\n                className='again-link'>Click to play again</Link>\n        </div>\n    )\n}\n\n\n\nexport default End;\n","/Users/tahaismail/web_projects/find_pokemon/src/firebase.js",[],"/Users/tahaismail/web_projects/find_pokemon/src/components/PokeView.js",[],"/Users/tahaismail/web_projects/find_pokemon/src/components/PokeCard.js",[],"/Users/tahaismail/web_projects/find_pokemon/src/components/ScoreCard.js",[],"/Users/tahaismail/web_projects/find_pokemon/src/displayTime.js",[],{"ruleId":"49","replacedBy":"50"},{"ruleId":"51","replacedBy":"52"},{"ruleId":"53","severity":1,"message":"54","line":7,"column":8,"nodeType":"55","messageId":"56","endLine":7,"endColumn":16},{"ruleId":"57","severity":1,"message":"58","line":30,"column":8,"nodeType":"59","endLine":30,"endColumn":10,"suggestions":"60"},"no-native-reassign",["61"],"no-negated-in-lhs",["62"],"no-unused-vars","'msToTime' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'history.location.state.name' and 'history.location.state.time'. Either include them or remove the dependency array.","ArrayExpression",["63"],"no-global-assign","no-unsafe-negation",{"desc":"64","fix":"65"},"Update the dependencies array to be: [history.location.state.name, history.location.state.time]",{"range":"66","text":"67"},[1237,1239],"[history.location.state.name, history.location.state.time]"]