{"ast":null,"code":"var _jsxFileName = \"/Users/tahaismail/web_projects/find_pokemon/src/Game.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport pokePic from './assets/pokemon_wallpaper.jpeg';\nimport { selectMons, getPokePics, checkFound } from './firebase';\nimport PokeCard from './components/PokeCard';\nimport PokeView from './components/PokeView';\nimport msToTime from './displayTime';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Game() {\n  _s();\n\n  let [foundPokes, setFoundPokes] = useState([]);\n  let [pickedPokemon, setPickedPokemon] = useState([]);\n  let [pokeCards, setPokeCards] = useState(null);\n  let [boxView, setBoxView] = useState(null);\n  let [elapsedTime, setElapsedTime] = useState();\n  useEffect(() => {\n    const getData = async () => {\n      const mons = await selectMons();\n      const pics = await getPokePics(mons);\n      const foundArray = [{\n        id: mons[0].id,\n        found: false\n      }, {\n        id: mons[1].id,\n        found: false\n      }, {\n        id: mons[2].id,\n        found: false\n      }, {\n        id: mons[3].id,\n        found: false\n      }, {\n        id: mons[4].id,\n        found: false\n      }];\n      setPickedPokemon(mons);\n      setFoundPokes(foundArray);\n      setPokeCards(pics.map((mon, index) => /*#__PURE__*/_jsxDEV(PokeCard, {\n        pokePic: mon.src,\n        pokeName: mons[index].name,\n        found: foundArray[index].found\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 17\n      }, this)));\n    };\n\n    getData();\n  }, []);\n  const history = useHistory();\n  const startTime = Date.now();\n  const name = history.location.state.name;\n\n  const selectArea = e => {\n    const boxWidth = 90;\n    const boxHeight = 110;\n    const parentPos = getPosition(e.target);\n    const xPos = e.clientX - parentPos.x - boxWidth / 2;\n    const yPos = e.clientY - parentPos.y - boxHeight / 2;\n    setBoxView( /*#__PURE__*/_jsxDEV(PokeView, {\n      boxCords: [xPos, yPos],\n      pokeList: pickedPokemon,\n      foundPokes: foundPokes,\n      foundFunction: updateFound\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }, this));\n  };\n\n  const updateFound = (pokeID, boxCords) => {\n    const found = checkFound(pokeID, boxCords);\n    const index = foundPokes.map(poke => poke.id).indexOf(pokeID);\n    found.then(result => {\n      setBoxView(null);\n      setFoundPokes(foundPokes.slice(0, index).concat([{\n        id: pickedPokemon[index].id,\n        found: result\n      }]).concat(foundPokes.slice(index + 1)));\n    });\n  };\n\n  useEffect(() => {\n    const totalFound = foundPokes.reduce((prev, cur) => prev + cur.found, 0);\n\n    if (totalFound === 5) {\n      history.push({\n        pathname: '/end',\n        state: {\n          time: Date.now() - startTime,\n          name: name\n        }\n      });\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Pokemon to find:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"poke-box\",\n      children: pokeCards\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"game-box\",\n      onClick: selectArea,\n      children: [boxView, /*#__PURE__*/_jsxDEV(\"img\", {\n        src: pokePic,\n        alt: \"pokemon-game\",\n        className: \"big-poke-pic\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 101,\n    columnNumber: 9\n  }, this);\n} //borrowed from https://www.kirupa.com/snippets/move_element_to_click_position.htm\n\n\n_s(Game, \"HQ5ohtuhvBQyFiyaWN/Tmgygq7o=\", false, function () {\n  return [useHistory];\n});\n\n_c = Game;\n\nfunction getPosition(element) {\n  let xPos = 0;\n  let yPos = 0;\n\n  while (element) {\n    if (element.tagName === 'BODY') {\n      let xScroll = element.scrollLeft || document.documentElement.scrollLeft;\n      let yScroll = element.scrollTop || document.documentElement.scrollTop;\n      xPos += element.offsetLeft - xScroll + element.clientLeft;\n      yPos += element.offsetTop - yScroll + element.clientTop;\n    } else {\n      xPos += element.offsetLeft - element.scrollLeft + element.clientLeft;\n      yPos += element.offsetTop - element.scrollTop + element.clientTop;\n    }\n\n    element = element.offsetParent;\n  }\n\n  return {\n    x: xPos,\n    y: yPos\n  };\n}\n\nexport default Game;\n\nvar _c;\n\n$RefreshReg$(_c, \"Game\");","map":{"version":3,"sources":["/Users/tahaismail/web_projects/find_pokemon/src/Game.js"],"names":["React","useState","useEffect","useHistory","pokePic","selectMons","getPokePics","checkFound","PokeCard","PokeView","msToTime","Game","foundPokes","setFoundPokes","pickedPokemon","setPickedPokemon","pokeCards","setPokeCards","boxView","setBoxView","elapsedTime","setElapsedTime","getData","mons","pics","foundArray","id","found","map","mon","index","src","name","history","startTime","Date","now","location","state","selectArea","e","boxWidth","boxHeight","parentPos","getPosition","target","xPos","clientX","x","yPos","clientY","y","updateFound","pokeID","boxCords","poke","indexOf","then","result","slice","concat","totalFound","reduce","prev","cur","push","pathname","time","element","tagName","xScroll","scrollLeft","document","documentElement","yScroll","scrollTop","offsetLeft","clientLeft","offsetTop","clientTop","offsetParent"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport pokePic from './assets/pokemon_wallpaper.jpeg';\nimport { selectMons, getPokePics, checkFound } from './firebase';\nimport PokeCard from './components/PokeCard';\nimport PokeView from './components/PokeView';\nimport msToTime from './displayTime';\n\nfunction Game() {\n    let [foundPokes, setFoundPokes] = useState([]);\n    let [pickedPokemon, setPickedPokemon] = useState([]);\n    let [pokeCards, setPokeCards] = useState(null);\n    let [boxView, setBoxView] = useState(null);\n    let [elapsedTime, setElapsedTime] = useState()\n\n    useEffect(() => {\n        const getData = async () => {\n            const mons = await selectMons();\n            const pics = await getPokePics(mons);\n            const foundArray = [    \n                {\n                    id: mons[0].id,\n                    found: false\n                },\n                {\n                    id: mons[1].id,\n                    found: false\n                },\n                {\n                    id: mons[2].id,\n                    found: false \n                },\n                {\n                    id: mons[3].id,\n                    found: false  \n                },\n                {\n                    id: mons[4].id,\n                    found: false\n                }\n            ];\n            setPickedPokemon(mons);\n            setFoundPokes(foundArray);\n            setPokeCards(pics.map((mon, index) => \n                <PokeCard\n                    pokePic={mon.src}\n                    pokeName={mons[index].name}\n                    found={foundArray[index].found}\n                    key={index}\n                ></PokeCard>));\n        }\n        getData();\n    }, [])\n    \n    const history = useHistory();\n    const startTime = Date.now();\n    \n    const name = history.location.state.name;\n    \n    const selectArea = (e) => {\n        const boxWidth = 90;\n        const boxHeight = 110;\n        const parentPos = getPosition(e.target);\n        const xPos = e.clientX - parentPos.x - boxWidth / 2;\n        const yPos = e.clientY - parentPos.y - boxHeight / 2;\n        setBoxView(\n            <PokeView \n                boxCords={[xPos, yPos]}\n                pokeList={pickedPokemon}\n                foundPokes={foundPokes}\n                foundFunction={updateFound}>\n            </PokeView>\n        );\n    }\n\n    const updateFound = (pokeID, boxCords) => {\n        const found = checkFound(pokeID, boxCords);\n        const index = foundPokes.map((poke) => poke.id).indexOf(pokeID);\n        found.then(result => {\n            setBoxView(null);\n            setFoundPokes(foundPokes.slice(0, index)\n            .concat([{id: pickedPokemon[index].id, found: result}])\n            .concat(foundPokes.slice(index + 1)));\n        })\n    }\n\n    useEffect(() => {\n        const totalFound = foundPokes.reduce((prev, cur) => prev + cur.found, 0);\n        if (totalFound === 5) {\n            history.push({\n                pathname: '/end',\n                state: {\n                    time: Date.now() - startTime,\n                    name: name\n                }\n            });\n        }\n    })\n\n    return (\n        <div>\n            <h2>Pokemon to find:</h2>\n            <div className='poke-box'>\n                {pokeCards}\n            </div>\n            <div className='game-box' onClick={selectArea}>\n                {boxView}\n                <img \n                    src={pokePic} \n                    alt='pokemon-game' \n                    className='big-poke-pic'>\n                </img>\n            </div>\n        </div>\n    );\n}\n\n//borrowed from https://www.kirupa.com/snippets/move_element_to_click_position.htm\nfunction getPosition(element) {\n    let xPos = 0;\n    let yPos = 0;\n\n    while (element) {\n        if (element.tagName === 'BODY') {\n            let xScroll = element.scrollLeft || document.documentElement.scrollLeft;\n            let yScroll = element.scrollTop || document.documentElement.scrollTop;\n\n            xPos += (element.offsetLeft - xScroll + element.clientLeft);\n            yPos += (element.offsetTop - yScroll + element.clientTop);\n        } else {\n            xPos += (element.offsetLeft - element.scrollLeft + element.clientLeft);\n            yPos += (element.offsetTop - element.scrollTop + element.clientTop);\n        }\n        element = element.offsetParent;\n    }\n    return {\n        x: xPos,\n        y: yPos\n    };\n}\n\nexport default Game;\n"]},"metadata":{},"sourceType":"module"}