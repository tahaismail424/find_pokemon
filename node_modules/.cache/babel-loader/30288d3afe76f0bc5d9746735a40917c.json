{"ast":null,"code":"var _jsxFileName = \"/Users/tahaismail/web_projects/find_pokemon/src/Game.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport pokePic from './assets/pokemon_wallpaper.jpeg';\nimport { selectMons, getPokePics, checkFound } from './firebase';\nimport PokeCard from './components/PokeCard';\nimport PokeView from './components/PokeView';\nimport PokeSelect from './components/PokeSelect';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Game() {\n  _s();\n\n  let [foundPokes, setFoundPokes] = useState([]);\n  let [currentBoxCords, setCurrentBoxCords] = useState(null);\n  let [pickedPokemon, setPickedPokemon] = useState([]);\n  let [pokePics, setPokePics] = useState([]);\n  let [pokeCards, setPokeCards] = useState(null);\n  let [boxView, setBoxView] = useState(null);\n  useEffect(() => {\n    const getData = async () => {\n      const mons = await selectMons();\n      const pics = await getPokePics(mons);\n      const foundArray = [{\n        id: mons[0].id,\n        found: false\n      }, {\n        id: mons[1].id,\n        found: false\n      }, {\n        id: mons[2].id,\n        found: false\n      }, {\n        id: mons[3].id,\n        found: false\n      }, {\n        id: mons[4].id,\n        found: false\n      }];\n      setPickedPokemon(mons);\n      setPokePics(pics);\n      setFoundPokes(foundArray);\n      setPokeCards(pics.map((mon, index) => /*#__PURE__*/_jsxDEV(PokeCard, {\n        pokePic: mon.src,\n        pokeName: mons[index].name,\n        found: foundArray[index].found\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 17\n      }, this)));\n    };\n\n    getData();\n  }, []);\n  const history = useHistory();\n  const startTime = Date.now();\n  const name = history.location.state.name;\n\n  const selectArea = e => {\n    const parentPos = getPosition(e.target);\n    const xClick = e.clientX;\n    const yClick = e.clientY;\n    const boxCords = [xClick - 45, xClick + 45, yClick - 55, yClick + 55];\n    setCurrentBoxCords([boxCords[0], boxCords[2]]);\n    setBoxView( /*#__PURE__*/_jsxDEV(PokeView, {\n      boxCords: [boxCords[0], boxCords[2]],\n      children: /*#__PURE__*/_jsxDEV(PokeSelect, {\n        pokeList: pickedPokemon,\n        foundPokes: foundPokes,\n        foundFunction: updateFound\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }, this));\n  };\n\n  const updateFound = pokeID => {\n    const found = checkFound(pokeID);\n    const index = foundPokes.map(poke => poke.id).indexOf(pokeID);\n    setFoundPokes(foundPokes.slice(0, index).concat({\n      id: pickedPokemon[index].id,\n      found: found\n    }).concat(foundPokes.slice(index + 1)));\n    setCurrentBoxCords(null);\n    setBoxView(null);\n  };\n\n  useEffect(() => {\n    const totalFound = foundPokes.reduce((prev, cur) => prev + cur.found, 0);\n\n    if (totalFound === 5) {\n      const elapsedTime = Date.now() - startTime;\n      history.push({\n        pathname: '/end',\n        state: {\n          time: elapsedTime,\n          name: name\n        }\n      });\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Pok\\xE9mon to find:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"pokeBox\",\n      children: pokeCards\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n      src: pokePic,\n      alt: \"pokemon-game\",\n      onClick: selectArea\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 13\n    }, this), boxView]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 101,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Game, \"XmCS6XgzD70eNZBx7U0VHpJkjHA=\", false, function () {\n  return [useHistory];\n});\n\n_c = Game;\n\nfunction getPosition(element) {\n  let xPos = 0;\n  let yPos = 0;\n\n  while (element) {\n    if (element.tagName == 'BODY') {\n      let xScroll = element.scrollLeft || document.documentElement.scrollLeft;\n      let yScroll = element.scrollTop || document.documentElement.scrollTop;\n      xPos += element.offsetLeft - xScroll + element.clientLeft;\n      yPos += element.offsetTop - yScroll + element.clientTop;\n    } else {\n      xPos += element.offsetLeft - element.scrollLeft + element.clientLeft;\n      yPos += element.offsetTop - element.scrollTop + element.clientTop;\n    }\n\n    element = element.offsetParent;\n  }\n}\n\nexport default Game;\n\nvar _c;\n\n$RefreshReg$(_c, \"Game\");","map":{"version":3,"sources":["/Users/tahaismail/web_projects/find_pokemon/src/Game.js"],"names":["React","useState","useEffect","useHistory","pokePic","selectMons","getPokePics","checkFound","PokeCard","PokeView","PokeSelect","Game","foundPokes","setFoundPokes","currentBoxCords","setCurrentBoxCords","pickedPokemon","setPickedPokemon","pokePics","setPokePics","pokeCards","setPokeCards","boxView","setBoxView","getData","mons","pics","foundArray","id","found","map","mon","index","src","name","history","startTime","Date","now","location","state","selectArea","e","parentPos","getPosition","target","xClick","clientX","yClick","clientY","boxCords","updateFound","pokeID","poke","indexOf","slice","concat","totalFound","reduce","prev","cur","elapsedTime","push","pathname","time","element","xPos","yPos","tagName","xScroll","scrollLeft","document","documentElement","yScroll","scrollTop","offsetLeft","clientLeft","offsetTop","clientTop","offsetParent"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport pokePic from './assets/pokemon_wallpaper.jpeg';\nimport { selectMons, getPokePics, checkFound } from './firebase';\nimport PokeCard from './components/PokeCard';\nimport PokeView from './components/PokeView';\nimport PokeSelect from './components/PokeSelect';\n\nfunction Game() {\n    let [foundPokes, setFoundPokes] = useState([]);\n    let [currentBoxCords, setCurrentBoxCords] = useState(null);\n    let [pickedPokemon, setPickedPokemon] = useState([]);\n    let [pokePics, setPokePics] = useState([]);\n    let [pokeCards, setPokeCards] = useState(null);\n    let [boxView, setBoxView] = useState(null);\n\n    useEffect(() => {\n        const getData = async () => {\n            const mons = await selectMons();\n            const pics = await getPokePics(mons);\n            const foundArray = [    \n                {\n                    id: mons[0].id,\n                    found: false\n                },\n                {\n                    id: mons[1].id,\n                    found: false\n                },\n                {\n                    id: mons[2].id,\n                    found: false \n                },\n                {\n                    id: mons[3].id,\n                    found: false  \n                },\n                {\n                    id: mons[4].id,\n                    found: false\n                }\n            ];\n            setPickedPokemon(mons);\n            setPokePics(pics);\n            setFoundPokes(foundArray);\n            setPokeCards(pics.map((mon, index) => \n                <PokeCard\n                    pokePic={mon.src}\n                    pokeName={mons[index].name}\n                    found={foundArray[index].found}\n                    key={index}\n                ></PokeCard>));\n        }\n        getData();\n    }, [])\n    \n    const history = useHistory();\n    const startTime = Date.now();\n    const name = history.location.state.name;\n    \n    const selectArea = (e) => {\n        const parentPos = getPosition(e.target);\n        const xClick = e.clientX;\n        const yClick = e.clientY;\n        const boxCords = [xClick - 45, xClick + 45, yClick - 55, yClick + 55];\n        setCurrentBoxCords([boxCords[0], boxCords[2]]);\n        setBoxView(\n            <PokeView boxCords={[boxCords[0], boxCords[2]]}>\n                <PokeSelect \n                    pokeList={pickedPokemon} \n                    foundPokes={foundPokes} \n                    foundFunction={updateFound}>    \n                </PokeSelect>\n                </PokeView>\n                )\n    }\n\n    const updateFound = (pokeID) => {\n        const found = checkFound(pokeID);\n        const index = foundPokes.map((poke) => poke.id).indexOf(pokeID);\n        setFoundPokes(foundPokes.slice(0, index).concat({id: pickedPokemon[index].id, found: found}).concat(foundPokes.slice(index + 1)));\n        setCurrentBoxCords(null);\n        setBoxView(null);\n    }\n\n    useEffect(() => {\n        const totalFound = foundPokes.reduce((prev, cur) => prev + cur.found, 0);\n        if (totalFound === 5) {\n            const elapsedTime = Date.now() - startTime;\n            history.push({\n                pathname: '/end',\n                state: {\n                    time: elapsedTime,\n                    name: name\n                }\n            });\n        }\n    })\n\n    return (\n        <div>\n            <h2>Pokémon to find:</h2>\n            <div className='pokeBox'>\n                {pokeCards}\n            </div>\n            <img src={pokePic} alt='pokemon-game' onClick={selectArea}></img>\n            {boxView}\n        </div>\n    );\n}\n\nfunction getPosition(element) {\n    let xPos = 0;\n    let yPos = 0;\n\n    while (element) {\n        if (element.tagName == 'BODY') {\n            let xScroll = element.scrollLeft || document.documentElement.scrollLeft;\n            let yScroll = element.scrollTop || document.documentElement.scrollTop;\n\n            xPos += (element.offsetLeft - xScroll + element.clientLeft);\n            yPos += (element.offsetTop - yScroll + element.clientTop);\n        } else {\n            xPos += (element.offsetLeft - element.scrollLeft + element.clientLeft);\n            yPos += (element.offsetTop - element.scrollTop + element.clientTop);\n        }\n        element = element.offsetParent;\n    }\n\n}\n\nexport default Game;\n"]},"metadata":{},"sourceType":"module"}