{"ast":null,"code":"var _jsxFileName = \"/Users/tahaismail/web_projects/find_pokemon/src/Game.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport pokePic from './assets/pokemon_wallpaper.jpeg';\nimport { selectMons, getPokePics, checkFound } from './firebase';\nimport PokeCard from './components/PokeCard';\nimport PokeView from './components/PokeView';\nimport PokeSelect from './components/PokeSelect';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Game() {\n  _s();\n\n  let [foundPokes, setFoundPokes] = useState([]);\n  const pickedPokemon = selectMons().then(mons => mons[({\n    id: pickedPokemon[0].id,\n    found: false\n  }, {\n    id: pickedPokemon[1].id,\n    found: false\n  }, {\n    id: pickedPokemon[2].id,\n    found: false\n  }, {\n    id: pickedPokemon[3].id,\n    found: false\n  }, {\n    id: pickedPokemon[4].id,\n    found: false\n  })]);\n  const pokePics = getPokePics(pickedPokemon).then(pics => pics);\n  const history = useHistory();\n  const startTime = Date.now();\n  const name = history.location.state.name;\n  let [currentBoxCords, setCurrentBoxCords] = useState(null);\n\n  const selectArea = e => {\n    const xClick = e.clientX;\n    const yClick = e.clientY;\n    const boxCords = [xClick - 45, xClick + 45, yClick - 55, yClick + 55];\n    setCurrentBoxCords([boxCords[0], boxCords[2]]);\n  };\n\n  const updateFound = pokeID => {\n    const found = checkFound(pokeID);\n    const index = foundPokes.map(poke => poke.id).indexOf(pokeID);\n    setFoundPokes(foundPokes.slice(0, index).concat({\n      id: pickedPokemon[index].id,\n      found: found\n    }).concat(foundPokes.slice(index + 1)));\n  };\n\n  useEffect(() => {\n    const totalFound = foundPokes.reduce((prev, cur) => prev + cur.found, 0);\n\n    if (totalFound === 5) {\n      const elapsedTime = Date.now() - startTime;\n      history.push({\n        pathname: '/end',\n        state: {\n          time: elapsedTime,\n          name: name\n        }\n      });\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Pok\\xE9mon to find:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"pokeBox\",\n      children: pokePics.map((mon, index) => /*#__PURE__*/_jsxDEV(PokeCard, {\n        pokePic: mon.src,\n        pokeName: pickedPokemon[index].name,\n        found: foundPokes[index].found\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n      src: pokePic,\n      alt: \"pokemon-game\",\n      onClick: selectArea\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 13\n    }, this), currentBoxCords ? /*#__PURE__*/_jsxDEV(PokeView, {\n      boxCords: currentBoxCords,\n      children: /*#__PURE__*/_jsxDEV(PokeSelect, {\n        pokeList: pickedPokemon,\n        foundPokes: foundPokes,\n        foundFunction: updateFound\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 17\n    }, this) : null]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Game, \"5YJIXn0IiupdJUdIyJe8/yGFscE=\", false, function () {\n  return [useHistory];\n});\n\n_c = Game;\nexport default Game;\n\nvar _c;\n\n$RefreshReg$(_c, \"Game\");","map":{"version":3,"sources":["/Users/tahaismail/web_projects/find_pokemon/src/Game.js"],"names":["React","useState","useEffect","useHistory","pokePic","selectMons","getPokePics","checkFound","PokeCard","PokeView","PokeSelect","Game","foundPokes","setFoundPokes","pickedPokemon","then","mons","id","found","pokePics","pics","history","startTime","Date","now","name","location","state","currentBoxCords","setCurrentBoxCords","selectArea","e","xClick","clientX","yClick","clientY","boxCords","updateFound","pokeID","index","map","poke","indexOf","slice","concat","totalFound","reduce","prev","cur","elapsedTime","push","pathname","time","mon","src"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport pokePic from './assets/pokemon_wallpaper.jpeg';\nimport { selectMons, getPokePics, checkFound } from './firebase';\nimport PokeCard from './components/PokeCard';\nimport PokeView from './components/PokeView';\nimport PokeSelect from './components/PokeSelect';\n\nfunction Game() {\n    let [foundPokes, setFoundPokes] = useState([]);\n    const pickedPokemon = selectMons().then(mons => mons[\n        {\n            id: pickedPokemon[0].id,\n            found: false\n        },\n        {\n            id: pickedPokemon[1].id,\n            found: false\n        },\n        {\n            id: pickedPokemon[2].id,\n            found: false \n        },\n        {\n            id: pickedPokemon[3].id,\n            found: false  \n        },\n        {\n            id: pickedPokemon[4].id,\n            found: false\n        }\n    ]);\n    const pokePics = getPokePics(pickedPokemon).then(pics => pics);\n    const history = useHistory();\n    const startTime = Date.now();\n    const name = history.location.state.name;\n\n    \n    let [currentBoxCords, setCurrentBoxCords] = useState(null);\n\n    const selectArea = (e) => {\n        const xClick = e.clientX;\n        const yClick = e.clientY;\n        const boxCords = [xClick - 45, xClick + 45, yClick - 55, yClick + 55];\n        setCurrentBoxCords([boxCords[0], boxCords[2]]);\n    }\n\n    const updateFound = (pokeID) => {\n        const found = checkFound(pokeID);\n        const index = foundPokes.map((poke) => poke.id).indexOf(pokeID);\n        setFoundPokes(foundPokes.slice(0, index).concat({id: pickedPokemon[index].id, found: found}).concat(foundPokes.slice(index + 1)));\n    }\n\n    useEffect(() => {\n        const totalFound = foundPokes.reduce((prev, cur) => prev + cur.found, 0);\n        if (totalFound === 5) {\n            const elapsedTime = Date.now() - startTime;\n            history.push({\n                pathname: '/end',\n                state: {\n                    time: elapsedTime,\n                    name: name\n                }\n            });\n        }\n    })\n\n    return (\n        <div>\n            <h2>Pok√©mon to find:</h2>\n            <div className='pokeBox'>\n                {pokePics.map((mon, index) => \n                    <PokeCard pokePic={mon.src} pokeName={pickedPokemon[index].name} found={foundPokes[index].found}></PokeCard>\n                )}\n            </div>\n            <img src={pokePic} alt='pokemon-game' onClick={selectArea}></img>\n            {currentBoxCords ? \n                <PokeView boxCords={currentBoxCords}>\n                    <PokeSelect \n                        pokeList={pickedPokemon} \n                        foundPokes={foundPokes} \n                        foundFunction={updateFound}>\n                    </PokeSelect>\n                </PokeView> \n                : null}\n        </div>\n    );\n}\n\nexport default Game;\n"]},"metadata":{},"sourceType":"module"}