{"ast":null,"code":"var _jsxFileName = \"/Users/tahaismail/web_projects/find_pokemon/src/Game.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport pokePic from './assets/pokemon_wallpaper.jpeg';\nimport { selectMons, getPokePics, checkFound } from './firebase';\nimport PokeCard from './components/PokeCard';\nimport PokeView from './components/PokeView';\nimport PokeSelect from './components/PokeSelect';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Game() {\n  _s();\n\n  let [foundPokes, setFoundPokes] = useState([]);\n  let [currentBoxCords, setCurrentBoxCords] = useState(null);\n  let [pickedPokemon, setPickedPokemon] = useState([]);\n  let [pokePics, setPokePics] = useState([]);\n  let pokeCards;\n  useEffect(() => {\n    const pickedPokemon = Promise.all(selectMons()).then(mons => {\n      let results = [];\n\n      for (let mon of mons) {\n        results.push({\n          id: mon.val().id,\n          name: mon.val().name\n        });\n      }\n\n      setFoundPokes([{\n        id: results[0].id,\n        found: false\n      }, {\n        id: results[1].id,\n        found: false\n      }, {\n        id: results[2].id,\n        found: false\n      }, {\n        id: results[3].id,\n        found: false\n      }, {\n        id: results[4].id,\n        found: false\n      }]);\n      setPokePics(Promise.all(getPokePics(results)).then(monURLs => {\n        let monPics = [];\n\n        for (let url in monURLs) {\n          monPics.push({\n            id: results[url].id,\n            src: monURLs[url]\n          });\n        }\n\n        return monPics;\n      }).catch(error => {\n        console.error(error);\n      }));\n      return results;\n    }).catch(error => {\n      console.error(error);\n    });\n  }, []);\n  const history = useHistory();\n  const startTime = Date.now();\n  const name = history.location.state.name;\n\n  const selectArea = e => {\n    const xClick = e.clientX;\n    const yClick = e.clientY;\n    const boxCords = [xClick - 45, xClick + 45, yClick - 55, yClick + 55];\n    setCurrentBoxCords([boxCords[0], boxCords[2]]);\n  };\n\n  const updateFound = pokeID => {\n    const found = checkFound(pokeID);\n    const index = foundPokes.map(poke => poke.id).indexOf(pokeID);\n    setFoundPokes(foundPokes.slice(0, index).concat({\n      id: pickedPokemon[index].id,\n      found: found\n    }).concat(foundPokes.slice(index + 1)));\n    setCurrentBoxCords(null);\n  };\n\n  useEffect(() => {\n    const totalFound = foundPokes.reduce((prev, cur) => prev + cur.found, 0);\n\n    if (totalFound === 5) {\n      const elapsedTime = Date.now() - startTime;\n      history.push({\n        pathname: '/end',\n        state: {\n          time: elapsedTime,\n          name: name\n        }\n      });\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Pok\\xE9mon to find:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"pokeBox\",\n      children: pokeCards\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n      src: pokePic,\n      alt: \"pokemon-game\",\n      onClick: selectArea\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 13\n    }, this), currentBoxCords ? /*#__PURE__*/_jsxDEV(PokeView, {\n      boxCords: currentBoxCords,\n      children: /*#__PURE__*/_jsxDEV(PokeSelect, {\n        pokeList: pickedPokemon,\n        foundPokes: foundPokes,\n        foundFunction: updateFound\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 17\n    }, this) : null]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 107,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Game, \"whVQxGEHU+NdIUqWhqgMfgJXZVM=\", false, function () {\n  return [useHistory];\n});\n\n_c = Game;\nexport default Game;\n\nvar _c;\n\n$RefreshReg$(_c, \"Game\");","map":{"version":3,"sources":["/Users/tahaismail/web_projects/find_pokemon/src/Game.js"],"names":["React","useState","useEffect","useHistory","pokePic","selectMons","getPokePics","checkFound","PokeCard","PokeView","PokeSelect","Game","foundPokes","setFoundPokes","currentBoxCords","setCurrentBoxCords","pickedPokemon","setPickedPokemon","pokePics","setPokePics","pokeCards","Promise","all","then","mons","results","mon","push","id","val","name","found","monURLs","monPics","url","src","catch","error","console","history","startTime","Date","now","location","state","selectArea","e","xClick","clientX","yClick","clientY","boxCords","updateFound","pokeID","index","map","poke","indexOf","slice","concat","totalFound","reduce","prev","cur","elapsedTime","pathname","time"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport pokePic from './assets/pokemon_wallpaper.jpeg';\nimport { selectMons, getPokePics, checkFound } from './firebase';\nimport PokeCard from './components/PokeCard';\nimport PokeView from './components/PokeView';\nimport PokeSelect from './components/PokeSelect';\n\nfunction Game() {\n    let [foundPokes, setFoundPokes] = useState([]);\n    let [currentBoxCords, setCurrentBoxCords] = useState(null);\n    let [pickedPokemon, setPickedPokemon] = useState([])\n    let [pokePics, setPokePics] = useState([]);\n    let pokeCards;\n\n    useEffect(() => { \n        const pickedPokemon = Promise.all(selectMons()).then((mons) => {\n            let results = [];\n            for (let mon of mons) {\n                results.push({\n                    id: mon.val().id,\n                    name: mon.val().name\n                });\n            }\n    \n            setFoundPokes([    \n                {\n                    id: results[0].id,\n                    found: false\n                },\n                {\n                    id: results[1].id,\n                    found: false\n                },\n                {\n                    id: results[2].id,\n                    found: false \n                },\n                {\n                    id: results[3].id,\n                    found: false  \n                },\n                {\n                    id: results[4].id,\n                    found: false\n                }\n            ]);\n\n            setPokePics(\n                Promise.all(getPokePics(results)).then((monURLs) => {\n                let monPics = [];\n                for (let url in monURLs) {\n                    monPics.push({\n                        id: results[url].id,\n                        src: monURLs[url]\n                    });\n                }\n                return monPics;\n            })\n            .catch((error) => {\n                console.error(error);\n            })\n            );\n\n\n            return results;\n    \n            }).catch((error) => {\n                console.error(error);\n            });\n    }, [])\n    \n    \n    const history = useHistory();\n    const startTime = Date.now();\n    const name = history.location.state.name;\n    \n    const selectArea = (e) => {\n        const xClick = e.clientX;\n        const yClick = e.clientY;\n        const boxCords = [xClick - 45, xClick + 45, yClick - 55, yClick + 55];\n        setCurrentBoxCords([boxCords[0], boxCords[2]]);\n    }\n\n    const updateFound = (pokeID) => {\n        const found = checkFound(pokeID);\n        const index = foundPokes.map((poke) => poke.id).indexOf(pokeID);\n        setFoundPokes(foundPokes.slice(0, index).concat({id: pickedPokemon[index].id, found: found}).concat(foundPokes.slice(index + 1)));\n        setCurrentBoxCords(null);\n    }\n\n    useEffect(() => {\n        const totalFound = foundPokes.reduce((prev, cur) => prev + cur.found, 0);\n        if (totalFound === 5) {\n            const elapsedTime = Date.now() - startTime;\n            history.push({\n                pathname: '/end',\n                state: {\n                    time: elapsedTime,\n                    name: name\n                }\n            });\n        }\n    })\n\n    return (\n        <div>\n            <h2>Pokémon to find:</h2>\n            <div className='pokeBox'>\n                {pokeCards}\n            </div>\n            <img src={pokePic} alt='pokemon-game' onClick={selectArea}></img>\n            {currentBoxCords ? \n                <PokeView boxCords={currentBoxCords}>\n                    <PokeSelect \n                        pokeList={pickedPokemon} \n                        foundPokes={foundPokes} \n                        foundFunction={updateFound}>\n                    </PokeSelect>\n                </PokeView> \n                : null}\n        </div>\n    );\n}\n\nexport default Game;\n"]},"metadata":{},"sourceType":"module"}